{"version":3,"sources":["Quote.jsx","App.js","index.js"],"names":["Quote","color","newQuotes","handleClick","id","style","marginRight","text","author","className","title","href","size","onClick","backgroundColor","defaultProps","App","useState","quotes","setQuotes","setNewQuotes","setColor","quotesRandomiser","Math","floor","random","length","useEffect","a","fetch","response","json","data","getRandColor","fetchApi","brightness","rgb","mix","map","x","round","join","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEO,SAASA,EAAT,GAAmD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,YACxC,OACE,mCACE,sBAAKC,GAAG,YAAYC,MAAO,CAAEJ,MAAOA,GAApC,UACE,qBAAIG,GAAG,OAAP,UACE,cAAC,IAAD,CAAaC,MAAO,CAAEC,YAAa,UAClCJ,EAAYA,EAAUK,KAAO,MAGhC,qBAAKH,GAAG,SAAR,SACGF,EAAUM,OAAS,KAAON,EAAUM,OAAS,gBAGhD,sBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,mBACEA,UAAU,aACVC,MAAM,mBACNC,KAAK,2BAHP,SAKE,cAAC,IAAD,CAAiBC,KAAM,QAASX,MAAOA,MAEzC,mBACEQ,UAAU,aACVC,MAAM,cACNC,KAAK,4BAHP,SAKE,cAAC,IAAD,CAAkBC,KAAM,QAASX,MAAOA,SAG5C,wBACEG,GAAG,YACHS,QAASV,EACTE,MAAO,CAAES,gBAAiBb,GAH5B,+BAaVD,EAAMe,aAAe,CACnBb,UAAW,8BCQEc,MAlDf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,qBAAlC,mBAAOf,EAAP,KAAkBkB,EAAlB,KACA,EAA0BH,qBAA1B,mBAAOhB,EAAP,KAAcoB,EAAd,KACMC,EAAmBJ,EAAOK,KAAKC,MAAMD,KAAKE,SAAWP,EAAOQ,SAElEC,qBAAU,YACM,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,+BADZ,cACXC,EADW,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAGfb,EAAUa,GACVX,EAASY,EAAa,IAJP,2CAAH,qDAMdC,KACC,IAEH,IAAMD,EAAe,SAACE,GAEpB,IAAIC,EAAM,CAAiB,IAAhBb,KAAKE,SAAgC,IAAhBF,KAAKE,SAAgC,IAAhBF,KAAKE,UACtDY,EAAM,CAAc,GAAbF,EAA8B,GAAbA,EAA8B,GAAbA,GAM7C,MAAO,OALQ,CAACC,EAAI,GAAKC,EAAI,GAAID,EAAI,GAAKC,EAAI,GAAID,EAAI,GAAKC,EAAI,IAAIC,KACjE,SAAUC,GACR,OAAOhB,KAAKiB,MAAMD,EAAI,MAGDE,KAAK,KAAO,KAGvCd,qBAAU,WACRP,EAAaE,KACZ,CAACJ,IAEJ,IAIA,EAA0BD,oBAAS,GAAnC,mBAAOyB,EAAP,KAEA,OAFA,KAGE,qBAAKjC,UAAU,MAAMJ,MAAO,CAAES,gBAAiBb,GAA/C,SACE,cAACD,EAAD,CACEC,MAAOA,EACPC,UAAWA,EACXC,YAXc,WAClBiB,EAAaE,GACbD,EAASY,EAAa,KAUlBS,MAAOA,OC3CfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.466465aa.chunk.js","sourcesContent":["import { FaQuoteLeft, FaTwitterSquare, FaFacebookSquare } from \"react-icons/fa\";\n\nexport function Quote({ color, newQuotes, handleClick }) {\n  return (\n    <>\n      <div id=\"quote-box\" style={{ color: color }}>\n        <h2 id=\"text\">\n          <FaQuoteLeft style={{ marginRight: \"1rem\" }} />\n          {newQuotes ? newQuotes.text : \"\"}\n        </h2>\n\n        <div id=\"author\">\n          {newQuotes.author ? \"- \" + newQuotes.author : \"- Anonymous\"}\n        </div>\n\n        <div className=\"user-section\">\n          <div className=\"icons\">\n            <a\n              className=\"icon-quote\"\n              title=\"Tweet this Quote\"\n              href=\"https://www.twitter.com/\"\n            >\n              <FaTwitterSquare size={\"2.5em\"} color={color} />\n            </a>\n            <a\n              className=\"icon-quote\"\n              title=\"share on FB\"\n              href=\"https://www.facebook.com/\"\n            >\n              <FaFacebookSquare size={\"2.5em\"} color={color} />\n            </a>\n          </div>\n          <button\n            id=\"new-quote\"\n            onClick={handleClick}\n            style={{ backgroundColor: color }}\n          >\n            New Quote\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nQuote.defaultProps = {\n  newQuotes: \"Honesty is the best policy\",\n};\n","import \"./App.scss\";\nimport { Quote } from \"./Quote\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [quotes, setQuotes] = useState([]);\n  const [newQuotes, setNewQuotes] = useState();\n  const [color, setColor] = useState();\n  const quotesRandomiser = quotes[Math.floor(Math.random() * quotes.length)]; //To select random quote from quotes array\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      let response = await fetch(\"https://type.fit/api/quotes\");\n      const data = await response.json();\n      setQuotes(data);\n      setColor(getRandColor(1));\n    };\n    fetchApi();\n  }, []);\n\n  const getRandColor = (brightness) => {\n    // Six levels of brightness from 0 to 5, 0 being the darkest\n    var rgb = [Math.random() * 256, Math.random() * 256, Math.random() * 256];\n    var mix = [brightness * 51, brightness * 51, brightness * 51]; //51 => 255/5\n    var mixedrgb = [rgb[0] + mix[0], rgb[1] + mix[1], rgb[2] + mix[2]].map(\n      function (x) {\n        return Math.round(x / 2.0);\n      }\n    );\n    return \"rgb(\" + mixedrgb.join(\",\") + \")\";\n  };\n\n  useEffect(() => {\n    setNewQuotes(quotesRandomiser);\n  }, [quotes]);\n\n  const handleClick = () => {\n    setNewQuotes(quotesRandomiser);\n    setColor(getRandColor(1));\n  };\n  const [state, setState] = useState(false);\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: color }}>\n      <Quote\n        color={color}\n        newQuotes={newQuotes}\n        handleClick={handleClick}\n        state={state}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}